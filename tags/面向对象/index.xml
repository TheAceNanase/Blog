<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>面向对象 - 标签 - 💗Nanase</title>
        <link>http://www.nishinonanase.xyz/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
        <description>面向对象 - 标签 - 💗Nanase</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 28 Jan 2016 15:46:34 &#43;0800</lastBuildDate><atom:link href="http://www.nishinonanase.xyz/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/" rel="self" type="application/rss+xml" /><item>
    <title>使用元类</title>
    <link>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8%E5%85%83%E7%B1%BB/</link>
    <pubDate>Thu, 28 Jan 2016 15:46:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8%E5%85%83%E7%B1%BB/</guid>
    <description><![CDATA[type() 动态语言和静态语言最大的不同，就是函数和类的定义，不是编译时定义的，而是运行时动态创建的。 比方说我们要定义一个Hello的class，就写]]></description>
</item><item>
    <title>使用枚举类</title>
    <link>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8%E6%9E%9A%E4%B8%BE%E7%B1%BB/</link>
    <pubDate>Mon, 25 Jan 2016 15:46:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8%E6%9E%9A%E4%B8%BE%E7%B1%BB/</guid>
    <description><![CDATA[当我们需要定义常量时，一个办法是用大写变量通过整数来定义，例如月份： 1 2 3 4 5 6 JAN = 1 FEB = 2 MAR = 3 ... NOV = 11 DEC = 12 好处是简单，缺点是类型是in]]></description>
</item><item>
    <title>定制类</title>
    <link>http://www.nishinonanase.xyz/%E5%AE%9A%E5%88%B6%E7%B1%BB/</link>
    <pubDate>Tue, 19 Jan 2016 15:46:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%AE%9A%E5%88%B6%E7%B1%BB/</guid>
    <description><![CDATA[看到类似__slots__这种形如__xxx__的变量或者函数名就要注意，这些在Python中是有特殊用途的。 __slots__我们已经知道]]></description>
</item><item>
    <title>多重继承</title>
    <link>http://www.nishinonanase.xyz/%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF/</link>
    <pubDate>Thu, 14 Jan 2016 15:46:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF/</guid>
    <description><![CDATA[继承是面向对象编程的一个重要的方式，因为通过继承，子类就可以扩展父类的功能。 在Animal类层次的设计，假设我们要实现以下4种动物： Dog - 狗狗]]></description>
</item><item>
    <title>使用@property</title>
    <link>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8property/</link>
    <pubDate>Fri, 08 Jan 2016 15:46:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8property/</guid>
    <description><![CDATA[在绑定属性时，如果我们直接把属性暴露出去，虽然写起来很简单，但是，没办法检查参数，导致可以把成绩随便改： 1 2 s = Student() s.score = 9999 这显然不合逻辑。为了]]></description>
</item><item>
    <title>使用__slots__</title>
    <link>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8__slots__/</link>
    <pubDate>Sun, 03 Jan 2016 15:46:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E4%BD%BF%E7%94%A8__slots__/</guid>
    <description><![CDATA[正常情况下，当我们定义了一个class，创建了一个class的实例后，我们可以给该实例绑定任何属性和方法，这就是动态语言的灵活性。先定义cl]]></description>
</item><item>
    <title>实例属性和类属性</title>
    <link>http://www.nishinonanase.xyz/%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7%E5%92%8C%E7%B1%BB%E5%B1%9E%E6%80%A7/</link>
    <pubDate>Mon, 28 Dec 2015 15:30:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7%E5%92%8C%E7%B1%BB%E5%B1%9E%E6%80%A7/</guid>
    <description><![CDATA[类属性就相当与全局变量，实例对象共有的属性，实例对象的属性为实例对象自己私有。 类属性就是类对象（Tool）所拥有的属性，它被所有类对象的实例]]></description>
</item><item>
    <title>获取对象信息</title>
    <link>http://www.nishinonanase.xyz/%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/</link>
    <pubDate>Wed, 23 Dec 2015 15:30:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E4%BF%A1%E6%81%AF/</guid>
    <description><![CDATA[当我们拿到一个对象的引用时，如何知道这个对象是什么类型、有哪些方法呢？ 使用type() 首先，我们来判断对象类型，使用type()函数： 基本类]]></description>
</item><item>
    <title>继承和多态</title>
    <link>http://www.nishinonanase.xyz/%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</link>
    <pubDate>Fri, 18 Dec 2015 15:30:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</guid>
    <description><![CDATA[在OOP程序设计中，当我们定义一个class的时候，可以从某个现有的class继承，新的class称为子类（Subclass），而被继承的c]]></description>
</item><item>
    <title>访问限制</title>
    <link>http://www.nishinonanase.xyz/%E8%AE%BF%E9%97%AE%E9%99%90%E5%88%B6/</link>
    <pubDate>Sun, 13 Dec 2015 19:30:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E8%AE%BF%E9%97%AE%E9%99%90%E5%88%B6/</guid>
    <description><![CDATA[Python的Class机制采用双下划线开头的方式将属性隐藏起来（设置成私有的），但其实这仅仅只是一种变形操作，类中所有的双下划线开头的属性]]></description>
</item></channel>
</rss>
