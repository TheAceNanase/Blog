<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>设计模式 - 标签 - 💗Nanase</title>
        <link>http://www.nishinonanase.xyz/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
        <description>设计模式 - 标签 - 💗Nanase</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1048792008@qq.com (书兰)</managingEditor>
            <webMaster>1048792008@qq.com (书兰)</webMaster><lastBuildDate>Fri, 25 Nov 2016 18:25:35 &#43;0800</lastBuildDate><atom:link href="http://www.nishinonanase.xyz/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="self" type="application/rss+xml" /><item>
    <title>适配器模式</title>
    <link>http://www.nishinonanase.xyz/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 25 Nov 2016 18:25:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[意图Intent Adapter Pattern:Convert the inface of a class into another interface clients expect.Adapter lets classes work together that couldn’t otherwise because of incompatible interface. 适配器模式:将一个类的接口变换成客户端所期待的另一种接口，从而使]]></description>
</item><item>
    <title>建造者模式</title>
    <link>http://www.nishinonanase.xyz/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 24 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[意图Intent Builder Pattern: Separate the construction of a complex object form its representation so that the same construction process can create different representations 造者模式:将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表]]></description>
</item><item>
    <title>抽象工厂</title>
    <link>http://www.nishinonanase.xyz/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</link>
    <pubDate>Sun, 20 Nov 2016 13:30:25 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</guid>
    <description><![CDATA[意图Intent Abstract Factory Pattern:Provide an interface for creating families of related or dependent objects without specifying their concrete classes. 抽象工厂模式：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。 抽象工]]></description>
</item><item>
    <title>工厂方法模式</title>
    <link>http://www.nishinonanase.xyz/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sun, 13 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[意图Intent Factory Pattern:Define an interface for creating an object,but let subclass decide which class to instantiate.Factory Method lets a class defer instantiation to subclass. 工厂方法模式：定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使]]></description>
</item><item>
    <title>简单工厂</title>
    <link>http://www.nishinonanase.xyz/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/</link>
    <pubDate>Sun, 13 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/</guid>
    <description><![CDATA[意图Intent Simple Factory Pattern：Creates objects without exposing the instantiation logic to the client. Refers to the newly created object through a common interface。 简单工厂模式: 专门定义一个类来负责]]></description>
</item><item>
    <title>单例模式</title>
    <link>http://www.nishinonanase.xyz/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 12 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[意图Intent Singleton Pattern：Ensure a class has only one instance, and provide a global point of access to it. 单例模式：确保某一个类只有一个实例，而且自行实例化并向整个系统提]]></description>
</item><item>
    <title>原型模式</title>
    <link>http://www.nishinonanase.xyz/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 03 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.nishinonanase.xyz/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[意图Intent Prototype Pattern：Specify the kinds of objects to create using a prototypical instance,and create new objects by copying this prototype. 原型模式:用原型实例指定创建对象的种类，并且通过拷贝这些原]]></description>
</item></channel>
</rss>
